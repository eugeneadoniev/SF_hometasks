Проект 4. Авиарейсы без потерь

1. ПРОБЛЕМА

Вы - аналитик в региональном филиале авиакомпании в Анапе. Вы узнаёте, что компания переживает не лучшие времена каждую зиму: не все рейсы из Анапы окупаются в «низкий сезон». При этом есть направления, которые потенциально могут быть прибыльными, но у компании не хватает самолетов для их запуска. И вашей первой задачей в новой должности станет помощь в поиске самых малоприбыльных рейсов.
Региональное руководство не принимает решений об отмене рейсов, а только передаёт информацию о невыгодных перелетах в центральный филиал. Однако данных в компании накопилось столько, что никто не может вытащить из базы нужную информацию. Именно вам предстоит разобраться с базой и достать из неё нужные данные. А выводы затем предстоит представить перед высшим руководством.
У Вас есть доступ к базе данных всех филиалов авиакомпании. Необходимо предоставить такую таблицу, которая позволит оптимизировать зимние авиарейсы Анапы.

2. ЦЕЛЬ ПРОЕКТА
Определить наименее прибыльные зимние авиарейсы из Анапы в 2017 году.
Для достижения поставленной цели необходимо:
- сформировать SQL запрос к базе данных;
- на основании полученного датасета определить наименее прибыльные авиарейсы.

3. ДИАГРАММА СХЕМЫ ДАННЫХ

База данных находится в учебном Metabase и называется dst_project.
Ссылка на базу данных: http://sql.skillfactory.ru:3000/

Основной сущностью является таблица бронирований (bookings).
В одно бронирование можно включить несколько пассажиров, каждому из которых выписывается отдельный билет (tickets). Билет имеет уникальный номер и содержит информацию о пассажире. Как таковой пассажир не является отдельной сущностью. Как имя, так и номер документа пассажира могут меняться с течением времени, так что невозможно однозначно найти все билеты одного человека; для простоты можно считать, что все пассажиры уникальны.
Билет включает один или несколько перелетов (ticket_flights). Несколько перелетов могут входить в билет в случаях, когда нет прямого рейса, соединяющего пункты отправления и назначения (полёт с пересадками), либо когда билет взят «туда и обратно». В схеме данных нет жёсткого ограничения, но предполагается, что все билеты в одном бронировании имеют одинаковый набор перелетов.
Каждый рейс (flights) следует из одного аэропорта (airports) в другой. Рейсы с одним номером имеют одинаковые пункты вылета и назначения, но будут отличаться датой отправления.
При регистрации на рейс пассажиру выдаётся посадочный талон (boarding_passes), в котором указано место в самолете. Пассажир может зарегистрироваться только на тот рейс, который есть у него в билете. Комбинация рейса и места в самолете должна быть уникальной, чтобы не допустить выдачу двух посадочных талонов на одно место.
Количество мест (seats) в самолете и их распределение по классам обслуживания зависит от модели самолета (aircrafts), выполняющего рейс. Предполагается, что каждая модель самолета имеет только одну компоновку салона. Схема данных не контролирует, что места в посадочных талонах соответствуют имеющимся в самолете (такая проверка может быть сделана с использованием табличных триггеров или в приложении).

ТАБЛИЦА BOOKINGS.AIRCRAFTS
Каждая модель самолета идентифицируется своим трёхзначным кодом (aircraft_code). Указывается также название модели (model) и максимальная дальность полёта в километрах (range).

ТАБЛИЦА BOOKINGS.AIRPORTS
Аэропорт идентифицируется трехбуквенным кодом (airport_code) и имеет своё имя (airport_name).
Для города не предусмотрено отдельной сущности, но название (city) указывается и может служить для того, чтобы определить аэропорты одного города. Также указывается широта (latitude), долгота (longitude) и часовой пояс (timezone).

ТАБЛИЦА BOOKINGS.BOARDING_PASSES
При регистрации на рейс, которая возможна за сутки до плановой даты отправления, пассажиру выдаётся посадочный талон. Он идентифицируется так же, как и перелёт — номером билета и номером рейса.
Посадочным талонам присваиваются последовательные номера (boarding_no) в порядке регистрации пассажиров на рейс (этот номер будет уникальным только в пределах данного рейса). В посадочном талоне указывается номер места (seat_no).

ТАБЛИЦА BOOKINGS.BOOKINGS
Пассажир заранее (максимум за месяц до рейса) бронирует билет себе и, возможно, нескольким другим пассажирам (дата бронирования — book_date). Бронирование идентифицируется номером (book_ref, шестизначная комбинация букв и цифр).
Поле total_amount хранит общую стоимость включённых в бронирование перелетов всех пассажиров.

ТАБЛИЦА BOOKINGS.FLIGHTS
Естественный ключ таблицы рейсов состоит из двух полей — номера рейса (flight_no) и даты отправления (scheduled_departure). Чтобы сделать внешние ключи на эту таблицу компактнее, в качестве первичного используется суррогатный ключ (flight_id).
Рейс всегда соединяет две точки — аэропорты вылета (departure_airport) и прибытия (arrival_airport). Такое понятие, как «рейс с пересадками» отсутствует: если из одного аэропорта до другого нет прямого рейса, в билет просто включаются несколько необходимых рейсов.
У каждого рейса есть запланированные дата и время вылета (scheduled_departure) и прибытия (scheduled_arrival). Реальные время вылета (actual_departure) и прибытия (actual_arrival) могут отличаться: обычно не сильно, но иногда и на несколько часов, если рейс задержан.

Статус рейса (status) может принимать одно из следующих значений:
→ Scheduled
Рейс доступен для бронирования. Это происходит за месяц до плановой даты вылета; до этого запись о рейсе не существует в базе данных.
→ On Time
Рейс доступен для регистрации (за сутки до плановой даты вылета) и не задержан.
→ Delayed
Рейс доступен для регистрации (за сутки до плановой даты вылета), но задержан.
→ Departed
Самолет уже вылетел и находится в воздухе.
→ Arrived
Самолет прибыл в пункт назначения.
→ Cancelled
Рейс отменён.

ТАБЛИЦА BOOKINGS.SEATS
Места определяют схему салона каждой модели. Каждое место определяется своим номером (seat_no) и имеет закреплённый за ним класс обслуживания (fare_conditions) — Economy, Comfort или Business.

ТАБЛИЦА BOOKINGS.TICKET_FLIGHTS
Перелёт соединяет билет с рейсом и идентифицируется их номерами.
Для каждого перелета указываются его стоимость (amount) и класс обслуживания (fare_conditions).

ТАБЛИЦА BOOKINGS.TICKETS
Билет имеет уникальный номер (ticket_no), состоящий из цифр.
Билет содержит идентификатор пассажира (passenger_id) — номер документа, удостоверяющего личность, — его фамилию и имя (passenger_name) и контактную информацию (contact_data).
Ни идентификатор пассажира, ни имя не являются постоянными (можно поменять паспорт, можно сменить фамилию), поэтому однозначно найти все билеты одного и того же пассажира невозможно.

4. SQL ЗАПРОСЫ ПРИВЕДЕНЫ В ФАЙЛЕ SQL_quiery.txt

5. ПОЛУЧИВШИЙСЯ ДАТАСЕТ СОХРАНЕН В ФАЙЛ project_4_data.csv

6. ДОПОЛНИТЕЛЬНЫЕ ИССЛЕДОВАНИЯ ПРИВЕДЕНЫ В Jupyter ноутбуке project_4_advanced.ipynb

7. ВЫВОДЫ И РЕКОМЕНДАЦИИ

В результате анализа чистой прибыли 118-ти авиарейсов из Анапы в зимний период 2017 определены наименее прибыльные рейсы. Рассматривались только рейсы, на которых были пассажиры. Все рейсы на самолетах модели "Sukhoi Superjet-100" заменто менее прибыльны, чем все рейсы модели "Boeing 737-300". Отсюда сформулируем 2 рекомендации, в зависимости от политики авиакомпании.

Рекомендация 1:
Если к сокращению подходить жестко, то нужно упразднить все 59 рейсов на самолетах модели "Sukhoi Superjet-100". Номера этих рейсов flight_id:
136807, 136642, 136844, 136887, 136922, 136823, 136620, 136937, 136888, 136645, 136678, 136936, 136609, 136767, 136666, 136838, 136660, 136709, 136769, 136861, 136729, 136855, 136632, 136780, 136951, 136754, 136706, 136733, 136612, 136956, 136630, 136802, 136669, 136720, 136571, 136907, 136778, 136672, 136649, 136661, 136819, 136586, 136900, 136605, 136927, 136815, 136827, 136841, 136654, 136953, 136600, 136875, 136871, 136869, 136857, 136755, 136781, 136757, 136758.

Рекомендация 2:
Если в политике более умеренный подход, то можно сократить определенное количество рейсов модели "Sukhoi Superjet-100" в ранжированном по возрастанию чистой прибыли списке. Например, первые 10 рейсов, чистая прибыль от которых не превышает 30% от максимальной в датасете. Номера этих рейсов flight_id:
136807, 136642, 136844, 136887, 136922, 136823, 136620, 136937, 136888, 136645

ССЫЛКИ
Открытый источник данных, используемых в проекте, а также их описание https://postgrespro.ru/docs/postgrespro/10/demodb-bookings
Памятка по основным функциям SQL https://www.w3schools.com/sql/sql_top.asp
Инструмент для форматирования и оформления кода SQL https://sqlformat.org