#!/usr/bin/env python
# coding: utf-8

# ### Анализ прибыльности рейсов
# загружаем .csv файл для дальнейшего анализа

# In[1]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


# In[2]:


df = pd.read_csv('project_4_data.csv')


# In[3]:


df.head(5)


# In[4]:


df.info()


# Из 127 рейсов из Анапы зимой 2017 после объединения таблиц в запросе осталось 118. По-видимому, отсеялись рейсы без пассажиров. 
# Посмотрим заполняемость рейса пассажирами:

# In[5]:


df['occupancy_by_passengers'] = round(
    df.actually_passengers/df.passenger_capacity, 2)


# In[6]:


df.sample(5)


# ## Дополнительные данные
# Доходы от каждого рейса определены (суммированием) сразу в SQL запросе из таблицы перелетов, в датафрейме они содержатся в столбце flight_income.
# Учитывая, что цель данного проекта - найти наименее прибыльные рейсы, важно уточнить расходы на рейс.
# Из базы данных в SQL запросе определены расходы на топливо по каждому рейсу. Это было сделано путем вычисления времени полета (напрямую из базы вычитанием время прибытия-время отправления) и часовому расходу топлива по каждой из двух моделей самолетов (этого не было в базе, информация взята из внешних источников).
# В исходной базе данных нет бухгалтерской информации о других расходах по статьям на рейс, поэтому
# дополним наши данные информацией из открытых источников.
# 
# Пример структуры расходов на авиарейс из публикации
# 
# https://www.rbc.ru/newspaper/2015/09/03/56bca2d89a7947299f72bbf0
# 
# Цитата:
# "Основные статьи расходов, формирующие себестоимость авиабилета, составляет обслуживание пассажиров, багажа и воздушных судов в аэропорту — 26%. Примерно столько же тратится на авиационное топливо. Затраты на ремонт и техническое обслуживание воздушных судов, страхование и лизинг занимают 16%. Следующая статья расходов — фонд оплаты труда, он составляет примерно 10%. Половину от фонда оплаты труда занимают затраты на рекламу и административные расходы — по 5%. Столько же тратится на комиссии и сборы. Аэронавигационные сборы и метеообеспечение составляют 4%. Оставшиеся 8% приходятся на амортизацию."
# 
# Т.е. примем расходы на топливо 26% в общей структуре расходов на рейс.
# Отсюда ориентировочно полные расходы на рейс total_cost = fuel_cost/0.26

# In[7]:


df['total_cost'] = round(df['fuel_cost']/0.26)


# чистая прибыль с рейса (за минусом НДС 15.25%):

# In[8]:


df['net_profit'] = round((df['flight_income'] - df['total_cost'])*(1-0.1525))


# отсортируем рейсы по чистой прибыли:

# In[9]:


df = df.sort_values(by='net_profit')


# In[10]:


df


# установим новые индексы и построим график по чистой прибыли:

# In[11]:


df.reset_index(level=0, inplace=True)
df['index1'] = df.index
plt.plot(df['index1'], df['net_profit'])


# видим скачок в чистой прибыли в районе 60-го по порядку рейса. Посмотрим поближе:

# In[12]:


df.loc[55:65]


# Видно, что чистая прибыль на рейсах "Боингов" существенно выше.
# Отсюда вывод первый: сокращаем рейсы "Sukhoi Superjet-100". Если кардинально - то все 59 рейсов этой модели самолета.
# Это будут рейсы с flight_id:

# In[13]:


a = df.loc[0:58]['flight_id']
print(list(a))


# Вывод второй: если не так революционно, а, например, 10 самых малоприбыльных рейсов, то это будут рейсы с flight_id:

# In[14]:


b = df.loc[0:9]['flight_id']
print(list(b))


# дополнительно определим среднюю чистую прибыль по всем зимним рейсам:

# In[15]:


round(df['net_profit'].mean())


# средняя чистая прибыль по рейсам на "Sukhoi Superjet-100":

# In[16]:


round(df.loc[0:58]['net_profit'].mean())


# средняя чистая прибыль по рейсам на "Boeing 737-300":

# In[17]:


round(df.loc[59:]['net_profit'].mean())


# таким образом, средняя чистая прибыль по рейсам на  "Boeing 737-300" вдвое больше, чем на "Sukhoi Superjet-100". Общеизвестно, что чем вместительнее самолет, тем дешевле перевозка одного пассажира. 
# Вместимость "Boeing 737-300" - 130 пассажиров, вместимость "Sukhoi Superjet-100" - 97 пассажиров.

# посмотрим для каждой из моделей самолетов среднюю загрузку пассажиров в отношении к максимальной вмесительности самолета:

# In[18]:


df.loc[0:58]['actually_passengers'].mean() / 97


# In[19]:


df.loc[59:]['actually_passengers'].mean() / 130


# несмотря на меньшую относительную загрузку пассажирами "Боингов", они все равно получаются более экономичными. Возможно, в "Боингах" больше доля мест бизнес-класса (я не проводил это исследование в Metabase), что тоже повышает доход.

# # выводы и рекомендации
# В результате анализа чистой прибыли 118-ти авиарейсов из Анапы в зимний период 2017 определены наименее прибыльные рейсы. Рассматривались только рейсы, на которых были пассажиры. Все рейсы на самолетах модели "Sukhoi Superjet-100" заменто менее прибыльны, чем все рейсы модели "Boeing 737-300".
# Отсюда 2 рекомендации, в зависимотси от политики авиакомпании:
# 1. Если к сокращению подходить жестко, то нужно упразднить все 59 рейсов на самолетах модели "Sukhoi Superjet-100". Номера этих рейсов flight_id:
#    
# 136807, 136642, 136844, 136887, 136922, 136823, 136620, 136937, 136888, 136645, 136678, 136936, 136609, 136767, 136666, 136838, 136660, 136709, 136769, 136861, 136729, 136855, 136632, 136780, 136951, 136754, 136706, 136733, 136612, 136956, 136630, 136802, 136669, 136720, 136571, 136907, 136778, 136672, 136649, 136661, 136819, 136586, 136900, 136605, 136927, 136815, 136827, 136841, 136654, 136953, 136600, 136875, 136871, 136869, 136857, 136755, 136781, 136757, 136758.
# 
# 2. Если в политике более умеренный подход, то можно сократить определенное количество рейсов модели "Sukhoi Superjet-100" в ранжированном по возрастанию чистой прибыли списке. Например, первые 10 рейсов, чистая прибыль от которых не превышает 30% от максимальной в датасете. Номера этих рейсов flight_id:
# 
# 136807, 136642, 136844, 136887, 136922, 136823, 136620, 136937, 136888, 136645
# 
# 
